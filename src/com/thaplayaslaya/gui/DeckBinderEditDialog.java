package com.thaplayaslaya.gui;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.font.TextAttribute;
import java.util.Map;

import javax.swing.JDialog;
import javax.swing.JToggleButton;

import com.thaplayaslaya.DeckManager;
import com.thaplayaslaya.datastructures.Deck;
import com.thaplayaslaya.datastructures.DeckBinder;

public class DeckBinderEditDialog extends JDialog {

	private static final long serialVersionUID = 1173643001427931665L;
	private DeckBinder deckBinder;
	private javax.swing.JPanel appearancePanel;
	private javax.swing.JButton backgroundColorButton;
	private javax.swing.JToggleButton boldToggle;
	private javax.swing.JButton cancelButton;
	private DeckBinderPanel deckBinderPanel1;
	private javax.swing.JPanel deckBinderSettingsPanel;
	private javax.swing.JButton defaultButton;
	private javax.swing.JButton doneButton;
	private javax.swing.JButton foregroundColorButton;
	private javax.swing.JToggleButton italicToggle;
	private javax.swing.JList<Deck> jList1;
	private javax.swing.JLabel jListLabel;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JButton moveDownButton;
	private javax.swing.JButton moveUpButton;
	private javax.swing.JLabel nameLabel;
	private javax.swing.JPanel previewPanel;
	private javax.swing.JToggleButton strikethroughToggle;
	private javax.swing.JToggleButton underlineToggle;
	private FontEffectActionListener fontEffectActionListener;

	public DeckBinderEditDialog(DeckBinder deckBinder) {
		super(DeckManager.getDeckManagerGUI(), "Edit Deck Binder", true);
		this.deckBinder = deckBinder;
		initComponents();
		setLocationRelativeTo(DeckManager.getDeckManagerGUI());
		setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void initComponents() {

		previewPanel = new javax.swing.JPanel();
		deckBinderPanel1 = deckBinder.getDBP().getCopyAsReference();
		appearancePanel = new javax.swing.JPanel();
		foregroundColorButton = new javax.swing.JButton();
		backgroundColorButton = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		defaultButton = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		deckBinderSettingsPanel = new javax.swing.JPanel();
		nameLabel = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		boldToggle = new javax.swing.JToggleButton();
		italicToggle = new javax.swing.JToggleButton();
		underlineToggle = new javax.swing.JToggleButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList();
		jListLabel = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		moveUpButton = new javax.swing.JButton();
		moveDownButton = new javax.swing.JButton();
		strikethroughToggle = new javax.swing.JToggleButton();
		doneButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		fontEffectActionListener = new FontEffectActionListener();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		previewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));

		javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
		previewPanel.setLayout(previewPanelLayout);
		previewPanelLayout.setHorizontalGroup(previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				previewPanelLayout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(deckBinderPanel1, deckBinderPanel1.getPreferredSize().width, deckBinderPanel1.getMaximumSize().width,
								Short.MAX_VALUE).addContainerGap()));
		previewPanelLayout.setVerticalGroup(previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				previewPanelLayout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(deckBinderPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		appearancePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Appearance"));

		foregroundColorButton.setText("Foreground Color");

		backgroundColorButton.setText("Background Color");

		defaultButton.setText("Default");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel2Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(defaultButton)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(defaultButton,
				javax.swing.GroupLayout.Alignment.TRAILING));

		javax.swing.GroupLayout appearancePanelLayout = new javax.swing.GroupLayout(appearancePanel);
		appearancePanel.setLayout(appearancePanelLayout);
		appearancePanelLayout.setHorizontalGroup(appearancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				appearancePanelLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								appearancePanelLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(backgroundColorButton, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(foregroundColorButton, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
		appearancePanelLayout.setVerticalGroup(appearancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				appearancePanelLayout
						.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(foregroundColorButton)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(backgroundColorButton)
						.addGap(11, 11, 11)
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 23, Short.MAX_VALUE));

		deckBinderSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Deck Binder Settings"));

		nameLabel.setText("Name:");

		jTextField1.setText(deckBinder.getName());

		boldToggle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		boldToggle.setText("B");
		boldToggle.addActionListener(fontEffectActionListener);

		italicToggle.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
		italicToggle.setText("I");
		italicToggle.addActionListener(fontEffectActionListener);

		underlineToggle.setText("U");
		Font font = new java.awt.Font("Tahoma", 0, 11);
		Map attributes = font.getAttributes();
		attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
		underlineToggle.setFont(new Font(attributes));
		underlineToggle.addActionListener(fontEffectActionListener);

		strikethroughToggle.setText("abc");
		Font font1 = new java.awt.Font("Tahoma", 0, 11);
		Map attributes1 = font1.getAttributes();
		attributes1.put(TextAttribute.STRIKETHROUGH, TextAttribute.STRIKETHROUGH_ON);
		strikethroughToggle.setFont(new Font(attributes1));
		strikethroughToggle.addActionListener(fontEffectActionListener);

		jList1.setModel(new javax.swing.AbstractListModel() {
			private static final long serialVersionUID = -7048048338606549905L;
			Object[] decks = deckBinder.getDecks().toArray();

			public int getSize() {
				return decks.length;
			}

			public Object getElementAt(int i) {
				return decks[i];
			}
		});
		jList1.setVisibleRowCount(5);
		jScrollPane1.setViewportView(jList1);

		jListLabel.setText("Deck Order:");

		moveUpButton.setText("Move Up");

		moveDownButton.setText("Move Down");

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(moveUpButton)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(moveDownButton)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(moveUpButton)
								.addComponent(moveDownButton)));

		javax.swing.GroupLayout deckBinderSettingsPanelLayout = new javax.swing.GroupLayout(deckBinderSettingsPanel);
		deckBinderSettingsPanel.setLayout(deckBinderSettingsPanelLayout);
		deckBinderSettingsPanelLayout
				.setHorizontalGroup(deckBinderSettingsPanelLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								deckBinderSettingsPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												deckBinderSettingsPanelLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																deckBinderSettingsPanelLayout.createSequentialGroup().addComponent(jListLabel)
																		.addGap(0, 0, Short.MAX_VALUE))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																deckBinderSettingsPanelLayout
																		.createSequentialGroup()
																		.addGroup(
																				deckBinderSettingsPanelLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.TRAILING)
																						.addComponent(jPanel4,
																								javax.swing.GroupLayout.Alignment.LEADING,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																						.addGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								deckBinderSettingsPanelLayout
																										.createSequentialGroup()
																										.addComponent(nameLabel)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																										.addComponent(jTextField1))
																						.addGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								deckBinderSettingsPanelLayout
																										.createSequentialGroup()
																										.addComponent(boldToggle)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(italicToggle)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(underlineToggle)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(strikethroughToggle)
																										.addGap(0, 0, Short.MAX_VALUE))
																						.addComponent(jScrollPane1,
																								javax.swing.GroupLayout.Alignment.LEADING))
																		.addContainerGap()))));
		deckBinderSettingsPanelLayout.setVerticalGroup(deckBinderSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						deckBinderSettingsPanelLayout
								.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										deckBinderSettingsPanelLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(nameLabel)
												.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										deckBinderSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(boldToggle).addComponent(italicToggle).addComponent(underlineToggle)
												.addComponent(strikethroughToggle))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jListLabel)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane1)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));

		doneButton.setText("Done");

		cancelButton.setText("Cancel");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												layout.createSequentialGroup()
														.addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(doneButton)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(cancelButton))
										.addGroup(
												layout.createSequentialGroup()
														.addComponent(deckBinderSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addGroup(
																layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(appearancePanel, javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																		.addComponent(previewPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(
												layout.createSequentialGroup()
														.addComponent(appearancePanel, javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(previewPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addComponent(deckBinderSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(
												layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(doneButton)
														.addComponent(cancelButton))).addContainerGap()));

		pack();
		previewPanel.revalidate();
	}

	private class FontEffectActionListener implements ActionListener {

		@SuppressWarnings({ "rawtypes", "unchecked" })
		@Override
		public void actionPerformed(ActionEvent e) {
			JToggleButton btn = (JToggleButton) e.getSource();
			boolean activate = btn.getModel().isSelected();
			Font f = deckBinderPanel1.getdBName().getFont();
			switch (btn.getText()) {
			case "B":
				deckBinderPanel1.getdBName().setFont(f.deriveFont(f.getStyle() ^ Font.BOLD));
				break;
			case "I":
				deckBinderPanel1.getdBName().setFont(f.deriveFont(f.getStyle() ^ Font.ITALIC));
				break;
			case "U":
				Map attributes = f.getAttributes();
				if(activate){
					attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
					
				} else {
					attributes.put(TextAttribute.UNDERLINE, -1);
				}
				deckBinderPanel1.getdBName().setFont(f.deriveFont(attributes));
				break;
			case "abc":
				Map attributes1 = f.getAttributes();
				if(activate){
					attributes1.put(TextAttribute.STRIKETHROUGH, TextAttribute.STRIKETHROUGH_ON);
					
				} else {
					attributes1.put(TextAttribute.STRIKETHROUGH, -1);
				}
				deckBinderPanel1.getdBName().setFont(f.deriveFont(attributes1));
				break;
			default:
				break;
			}

		}

	}

}
